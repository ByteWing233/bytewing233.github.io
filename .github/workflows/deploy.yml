name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # 我们使用一个更新的 Hugo 版本，因为它与你内化的 v2 主题更兼容
      HUGO_VERSION: 0.128.2
      DART_SASS_VERSION: 1.77.0
    steps:
      # 步骤 1: 安装 Hugo
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      
      # 步骤 2: 安装 Dart Sass
      - name: Install Dart Sass
        run: |
          wget -O ${{ runner.temp }}/dart-sass.tar.gz https://github.com/sass/dart-sass/releases/download/${{ env.DART_SASS_VERSION }}/dart-sass-${{ env.DART_SASS_VERSION }}-linux-x64.tar.gz
          tar -xf ${{ runner.temp }}/dart-sass.tar.gz -C ${{ runner.temp }}
          echo "${{ runner.temp }}/dart-sass" >> $GITHUB_PATH
          
      # 步骤 3: Checkout 你的代码（包括 themes 文件夹）
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true # 保留这个是个好习惯

      # 步骤 4: 设置 GitHub Pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # 步骤 5: 构建网站
      - name: Build with Hugo
        # 注意：run: hugo 后面不再需要复杂的参数，因为 Setup Pages 会处理
        run: hugo

      # 步骤 6: 上传构建产物
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4